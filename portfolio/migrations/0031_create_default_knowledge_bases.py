# Generated by Django 5.2 on 2025-10-13

from django.db import migrations
from django.utils.text import slugify


COMMON_KNOWLEDGE_ICONS = {
    # Programming Languages
    "Python": "fab fa-python",
    "JavaScript": "fab fa-js-square",
    "Java": "fab fa-java",
    "PHP": "fab fa-php",
    "Swift": "fab fa-swift",
    "Rust": "fab fa-rust",
    "Go": "fab fa-golang",
    "C++": "fas fa-code",
    "C#": "fas fa-code",
    "Ruby": "fas fa-gem",
    "Kotlin": "fab fa-android",
    "TypeScript": "fab fa-js-square",
    # Frontend
    "React": "fab fa-react",
    "Vue.js": "fab fa-vuejs",
    "Angular": "fab fa-angular",
    "HTML": "fab fa-html5",
    "CSS": "fab fa-css3-alt",
    "Sass": "fab fa-sass",
    "Bootstrap": "fab fa-bootstrap",
    "Tailwind CSS": "fas fa-wind",
    # Backend / Frameworks
    "Django": "fas fa-server",
    "Flask": "fas fa-flask",
    "Node.js": "fab fa-node-js",
    "Express.js": "fas fa-server",
    "Laravel": "fab fa-laravel",
    "Spring Boot": "fas fa-leaf",
    "FastAPI": "fas fa-rocket",
    # Databases
    "PostgreSQL": "fas fa-database",
    "MySQL": "fas fa-database",
    "MongoDB": "fas fa-database",
    "Redis": "fas fa-database",
    "SQLite": "fas fa-database",
    # DevOps / Cloud
    "Docker": "fab fa-docker",
    "Kubernetes": "fas fa-dharmachakra",
    "AWS": "fab fa-aws",
    "Google Cloud": "fab fa-google",
    "Azure": "fab fa-microsoft",
    "Git": "fab fa-git-alt",
    "GitHub": "fab fa-github",
    "GitLab": "fab fa-gitlab",
    # Tools
    "Linux": "fab fa-linux",
    "Ubuntu": "fab fa-ubuntu",
    "Windows": "fab fa-windows",
    "macOS": "fab fa-apple",
    "VS Code": "fas fa-code",
    "Figma": "fab fa-figma",
    "Slack": "fab fa-slack",
    "Trello": "fab fa-trello",
    # Mobile
    "Android": "fab fa-android",
    "iOS": "fab fa-apple",
    "React Native": "fab fa-react",
    "Flutter": "fas fa-mobile-alt",
    # Other
    "WordPress": "fab fa-wordpress",
    "Shopify": "fab fa-shopify",
    "Firebase": "fas fa-fire",
    "GraphQL": "fas fa-project-diagram",
    "REST API": "fas fa-exchange-alt",
    # Knowledge Areas - Energy and Engineering
    "BESS": "fas fa-battery-full",
    "Renewable Energy": "fas fa-solar-panel",
    "AutoCAD": "fas fa-drafting-compass",
    # Knowledge Areas - Business and Management
    "Business Development": "fas fa-chart-line",
    "Project Management": "fas fa-tasks",
    "Innovation Management": "fas fa-lightbulb",
}


COLOR_MAPPING = {
    "Python": "#3776ab",
    "JavaScript": "#f7df1e",
    "Java": "#ed8b00",
    "PHP": "#777bb4",
    "Swift": "#fa7343",
    "Rust": "#000000",
    "Go": "#00add8",
    "C++": "#00599c",
    "C#": "#239120",
    "Ruby": "#cc342d",
    "Kotlin": "#7f52ff",
    "TypeScript": "#3178c6",
    "React": "#61dafb",
    "Vue.js": "#4fc08d",
    "Angular": "#dd0031",
    "HTML": "#e34f26",
    "CSS": "#1572b6",
    "Sass": "#cc6699",
    "Bootstrap": "#7952b3",
    "Tailwind CSS": "#06b6d4",
    "Django": "#092e20",
    "Flask": "#000000",
    "Node.js": "#339933",
    "Express.js": "#000000",
    "Laravel": "#ff2d20",
    "Spring Boot": "#6db33f",
    "FastAPI": "#009688",
    "PostgreSQL": "#336791",
    "MySQL": "#4479a1",
    "MongoDB": "#47a248",
    "Redis": "#dc382d",
    "SQLite": "#003b57",
    "Docker": "#2496ed",
    "Kubernetes": "#326ce5",
    "AWS": "#ff9900",
    "Google Cloud": "#4285f4",
    "Azure": "#0078d4",
    "Git": "#f05032",
    "GitHub": "#181717",
    "GitLab": "#fc6d26",
    "Linux": "#fcc624",
    "Ubuntu": "#e95420",
    "Windows": "#0078d6",
    "macOS": "#000000",
    "VS Code": "#007acc",
    "Figma": "#f24e1e",
    "Slack": "#4a154b",
    "Trello": "#0079bf",
    "Android": "#3ddc84",
    "iOS": "#000000",
    "React Native": "#61dafb",
    "Flutter": "#02569b",
    "WordPress": "#21759b",
    "Shopify": "#7ab55c",
    "Firebase": "#ffca28",
    "GraphQL": "#e10098",
    "REST API": "#009688",
    "BESS": "#28a745",
    "Renewable Energy": "#8bc34a",
    "AutoCAD": "#e51937",
    "Business Development": "#0066cc",
    "Project Management": "#ff6b6b",
    "Innovation Management": "#ffd700",
}


def _identifier_from_name(name: str) -> str:
    normalized = (
        name.replace("++", " plus plus ")
        .replace("#", " sharp ")
        .replace(".", " ")
    )
    identifier = slugify(normalized)
    if not identifier:
        identifier = slugify(name)
    return identifier or slugify(f"{name} knowledge")


def create_default_knowledge_bases(apps, schema_editor):
    KnowledgeBase = apps.get_model("portfolio", "KnowledgeBase")
    KnowledgeBaseTranslation = apps.get_model("portfolio", "KnowledgeBaseTranslation")

    for name, icon in COMMON_KNOWLEDGE_ICONS.items():
        identifier = _identifier_from_name(name)

        if KnowledgeBase.objects.filter(identifier=identifier).exists():
            continue

        color = COLOR_MAPPING.get(name, "#000000")

        kb = KnowledgeBase.objects.create(
            identifier=identifier,
            icon=icon,
            color=color,
        )

        KnowledgeBaseTranslation.objects.create(
            master=kb,
            language_code="en",
            name=name,
        )
        KnowledgeBaseTranslation.objects.create(
            master=kb,
            language_code="es",
            name=name,
        )


def remove_default_knowledge_bases(apps, schema_editor):
    KnowledgeBase = apps.get_model("portfolio", "KnowledgeBase")
    identifiers = [
        _identifier_from_name(name) for name in COMMON_KNOWLEDGE_ICONS.keys()
    ]
    KnowledgeBase.objects.filter(identifier__in=identifiers).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("portfolio", "0030_rename_technology_knowledgebase_and_more"),
    ]

    operations = [
        migrations.RunPython(
            create_default_knowledge_bases,
            remove_default_knowledge_bases,
        ),
    ]
